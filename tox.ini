[tox]
envlist = py3{6,7,8,9}-{linux,macos,windows}
skip_missing_interpreters = true
skipsdist=True

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
passenv =
    pythonLocation
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv =
  PYTHONPATH={toxinidir}

deps =
    pip>=20.0.1
    nose
    coverage
    coverage_python_version
    -r requirements.txt

commands =
    #python -c "import redis_ipc"
    #python -m doctest -v README.rst
    nosetests -x --detailed-errors .

[testenv:build]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING 
    PIP_DOWNLOAD_CACHE

deps =
    setuptools
    build
    twine

commands =
    python -m build .
    twine check dist/*

[testenv:dev]
skip_install = true
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING 
    PIP_DOWNLOAD_CACHE

deps =
    pip>=20.0.1
    pytest
    pytest-flake8
    pytest-cov

commands_pre =
    python -m pip install -U pip
    python -m pip install -e .[test,cov]

commands =
    pytest -v --doctest-modules --flake8 redis_ipc.py --cov redis_ipc --cov-report term-missing

[testenv:lint]
passenv =
    CI
    PYTHONIOENCODING

deps =
    pip>=20.0.1
    pylint
    -r requirements.txt

commands =
    pylint --fail-under=9.25 redis_ipc.py

[testenv:style]
passenv =
    CI
    PYTHONIOENCODING

deps =
    pip>=20.0.1
    pycodestyle
    flake8
    -r requirements.txt

commands =
    flake8 redis_ipc.py
    pycodestyle redis_ipc.py

[pycodestyle]
max-line-length = 84
