[tox]
envlist = py3{6,7,8,9}-tests-{linux,macos}
skip_missing_interpreters = true
skipsdist=True

[pycodestyle]
max-line-length = 84

[pytest]
minversion = 2.8
#testpaths = tests/

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos

[testenv]
whitelist_externals =
    tests: bash

skip_install = true

setenv =
    noredis: PYTHONPATH={toxinidir}

passenv =
    pythonLocation
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    pip>=20.0.1
    build: setuptools
    build: build
    build: twine
    lint: pylint
    style: pycodestyle
    style: flake8
    noredis: nose
    noredis: nose-exclude
    noredis: coverage
    noredis: coverage_python_version
    {lint,style,noredis}: -r requirements.txt

commands_pre =
    tests: python -m pip install -U pip
    tests: python -m pip install -e .[test,cov]
    tests: bash -c 'scripts/run_redis.sh start > /dev/null'
    tests: bash -c 'scripts/run_redis.sh status'

commands =
    build: python -m build .
    build: twine check dist/*
    tests: py.test -v --capture=no --cov redis_ipc --cov-report term-missing
    lint: pylint --fail-under=9.25 redis_ipc.py
    style: flake8 redis_ipc.py
    style: pycodestyle redis_ipc.py
    noredis: nosetests -x --detailed-errors -I test_simple_bus.py .

commands_post =
    tests: bash -c 'scripts/run_redis.sh stop > /dev/null'
